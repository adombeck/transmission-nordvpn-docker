#!/bin/bash

set -euo pipefail
set -x

CONFIG_FILE="$HOME/.config/transmission-nordvpn.conf"

start_vpn_container() {
	# Start a Docker container which provides a Docker network which
	# tunnels all traffic via NordVPN. See
	#
	#   https://github.com/bubuntux/nordvpn
	#
	
	# Check if the container is already running
	if [ -n "$(docker ps -q -f name="vpn")" ]; then
		# The container is already running, nothing to do here
		return
	fi
	
	docker run -d --rm \
		--name "vpn" \
		-e USER="${NORDVPN_USER}" \
		-e PASS="${NORDVPN_PASS}" \
		`# Required by nordvpn for setting iptables rules` \
		--cap-add=NET_ADMIN --device /dev/net/tun \
		--sysctl net.ipv4.conf.all.rp_filter=2 \
		`# Connect to a server in Swiss` \
		-e CONNECT=ch \
		`# Use nordvpn's wireguard client` \
		-e TECHNOLOGY=NordLynx \
		`# Forward the transmission port to localhost` \
		-p 9091:9091 \
		bubuntux/nordvpn
}

start_transmission_container() {
	# Start a Docker container which runs the transmission-daemon and is
	# connected to the vpn network. See
	#
	#   https://hub.docker.com/r/linuxserver/transmission
	#

	# Check if the container is already running
	if [ -n "$(docker ps -q -f name="transmission")" ]; then
		# The container is already running, nothing to do here
		return
	fi

	docker run -d --rm \
		--name="transmission" \
		-e PUID=1000 \
		-e PGID=1000 \
		-e TZ="Europe/Berlin" \
		-v "$HOME/.config/transmission-daemon:/config" \
		-v "$HOME/torrents:/downloads" \
		--net="container:vpn" \
		transmission
}

# Import environment variables from config file
export $(grep -v '^#' "${CONFIG_FILE}" | xargs)

# Check that required environment variables are set
: "${NORDVPN_USER}"
: "${NORDVPN_PASS}"

# Start the VPN container
start_vpn_container

# Start the transmission daemon container
start_transmission_container

# Start the transmission-remote-gtk app, which allows to control the
# transmission daemon.
transmission-remote-gtk

